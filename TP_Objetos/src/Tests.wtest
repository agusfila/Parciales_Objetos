import Tirador.*
import Pasador.*
import Rebotador.*
import Entrenador.*
import Equipo.*

describe "Jugadores Test" {

	const juan
	const franco
	const aye
	const lebron

	fixture {
		juan = new Tirador(altura = 180, eficaciaTriple = 60, nivelInteligencia = 30, talento = 60, esSucio = true)
		franco = new Rebotador(altura = 200, nivelInteligencia = 70, talento = 70, eficaciaTriple = 10, esSucio = true)
		aye = new Pasador(altura = 167, eficaciaTriple = 35, nivelInteligencia = 80, talento = 85, esSucio = false)
		lebron = new Pasador(altura = 700, eficaciaTriple = 90, nivelInteligencia = 95, talento = 90, esSucio = true)
	}

	test "Juan tiene 108.375 de habilidad" {
		assert.equals(108.375, juan.habilidadFinal())
	}

	test "Franco tiene 96 de habilidad" {
		assert.equals(96, franco.habilidadFinal())
	}

	test "Aye tiene 45.32 de habilidad" {
		assert.equals(45.32, aye.habilidadFinal())
	}
	
	test "Lebron tiene 135.9 de habilidad" {
		assert.equals(135.9, lebron.habilidadFinal())
	}

	test "Juan es crack" {
		assert.that(juan.esCrack())
	}

	test "Aye no es crack" {
		assert.notThat(aye.esCrack())
	}

	test "Lebron es leyenda" {
		assert.that(lebron.esLeyenda())
	}

	test "juan no es Leyenda" {
		assert.notThat(juan.esLeyenda())
	}

}

describe "Entrenadores Test" {

	const aye
	const feli

	fixture{
		aye = new Pasador(altura = 167, eficaciaTriple = 35, nivelInteligencia = 80, talento = 85, esSucio = false)
		feli = new Motivador(nombre = "Federico", apellido = "Scarpa", edad = 25, multiplicadorValoracion = 0.2)
	}
	
	test "Feli entrena a aye y disminuye su stamina a 95" {
		feli.entrenarA(aye)
		assert.equals(95,aye.stamina())
	}
	
	test "Feli entrena a aye y disminuye su habilidad a 41.38 porque se canso" {
		feli.entrenarA(aye)
		assert.equals(41.38,aye.habilidadFinal())
	}
	
	test "Feli entrena a aye dos veces y disminuye su habilidad a 37.546 porque se canso" {
		feli.entrenarA(aye)
		feli.entrenarA(aye)
		assert.equals(37.546,aye.habilidadFinal())
	}
	
	test "Feli entrena a aye dos veces, luego aye descansa 20 min y aumenta su habilidad a 137.546" {
		feli.entrenarA(aye)
		feli.entrenarA(aye)
		aye.descansar(20)
		assert.equals(137.546,aye.habilidadFinal())
	}

}

describe "Equipos Test" {

	const juan
	const franco
	const aye
	const equipoPdep
	const feli
	const lebron
	const carusoLombardi
	const lakers
	const becky

	fixture {
		juan = new Tirador(altura = 180, eficaciaTriple = 60, nivelInteligencia = 30, talento = 60, esSucio = true)
		franco = new Rebotador(altura = 200, nivelInteligencia = 70, talento = 70, eficaciaTriple = 10, esSucio = true)
		aye = new Pasador(altura = 167, eficaciaTriple = 35, nivelInteligencia = 80, talento = 85, esSucio = false)
		lebron = new Pasador(altura = 700, eficaciaTriple = 90, nivelInteligencia = 95, talento = 90, esSucio = true)
		feli = new Motivador(nombre = "Federico", apellido = "Scarpa", edad = 25, multiplicadorValoracion = 0)
		carusoLombardi = new Vendehumo(nombre = "Ricardo", apellido = "Caruso Lombardi", edad = 57, multiplicadorValoracion = 0)
		becky = new Fino(nombre = "Becky", apellido = "Hammon", edad = 43, multiplicadorValoracion = 0)
		equipoPdep = new Equipo(jugadores = #{ juan, franco, aye })
		lakers = new Equipo(jugadores = #{ juan, aye, lebron })
	}

	test "Feli Scarpa entrena a Equipo PdeP tiene 83.23167 puntos de habilidad" {
		feli.dirigir(equipoPdep)
		assert.equals(83.23167, equipoPdep.valoracionEquipo())
	}

	test "Caruso Lombardi entrena a Lakers tiene 120.66459 puntos de habilidad" {
		carusoLombardi.dirigir(lakers)
		assert.equals(120.66459, lakers.valoracionEquipo())
	}

	test "Caruso Lombardi entrena a equipoPdep y tiene 70.74692 puntos de habilidad" {
		carusoLombardi.dirigir(equipoPdep)
		assert.equals(70.74692, equipoPdep.valoracionEquipo())
	}

	test "Becky Hammon entrena a equipoPdep y tiene 132.36708 puntos de habilidad" {
		becky.dirigir(equipoPdep)
		becky.entrenar(equipoPdep)
		assert.equals(132.36708,equipoPdep.valoracionEquipo())
		
	}
}

